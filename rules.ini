; File paths always use / as the path separator
; Regex generator uses ~ as the boundary, so no need to escape /, regex is case-insensitive
; Regex runs on the entire file path in a depot, e.g. "game/bin/win64/dota2.exe"
; Do not use capturing groups, add ?: to it to make it non capturing

[Evidence]
ARC = \.arc$ ; Apex Engine
BIF = \.bif$ ; BioWare
Build[] = (?:^|/)BUILD\.EXE$
Build[] = (?:^|/)COMMIT\.DAT$
Build[] = (?:^|/)GAME\.CON$
CFG = \.cfg$ ; idTech1
DATA_WIN = (?:^|/)data\.win$ ; GameMaker
HDLL = \.hdll$ ; Heaps
METADATA_DAT = (?:^|/)metadata\.dat$ ; RAGE
MUS_OGG = (?:^|/)mus\_[\w0-9]+\.ogg$
OPTIONS_INI = (?:^|/)options\.ini$ ; GameMaker
PCK = \.pck$ ; Used for detecting Godot
PIXI_JS = (?:^|/)pixi\.js$
PK3 = \.pk3$ ; idTech3
RIM = \.rim$ ; BioWare
RPF = \.rpf$ ; RAGE
SCR = \.scr$ ; SCI
SIERRA_EXE = (?:^|/)SIERRA\.EXE$ ; SCI
SND_OGG = (?:^|/)snd_.+\.ogg$ ; GameMaker
TAB = \.tab$ ; Apex Engine
TGA = \.tga$ ; BioWare
TLK = \.tlk$ ; BioWare
U = \.u$ ; Unreal
VSWAP = (?:^|/)vswap\. ; idTech0
WAD = \.wad$ ; idTech1

[Engine]
Adobe_AIR = (?:^|/)Adobe AIR(?:$|/)
AdventureGameStudio = (?:^|/)(?:AGSteam\.dll|acsetup\.cfg)$
AGI = (?:^|/)AGIDATA\.OVL$
Bitsquid = (?:^|/)(?:9e13b2414b41b842|ec181385e7000cf1)$
BlenderGameEngine[] = (?:^|/)BlendThumb(?:64|)\.dll$
BlenderGameEngine[] = (?:^|/)blenderplayer\.exe$
Build = (?:^|/)buildlic\.txt$
ChromeEngine[] = (?:^|/)ChromEd\.exe$
ChromeEngine[] = (?:^|/)ChromeEngine[0-9]\.dll$
ChromeEngine[] = \.rpack$
Clausewitz[] = (?:^|/)common/defines\.(?:lua|txt)$
Clausewitz[] = ^(?:game/)?common/defines/00_defines\.txt$
ClickTeamFusion = (?:^|/)mmfs2\.dll$
Cocos = cocos(?:2d|-js)
Construct = (?:^|/)c[23]runtime\.js$
CryEngine[] = (?:^|/)cry3dengine\.dll$
CryEngine[] = (?:^|/)CryD3DCompilerStub\.dll$
CryEngine[] = (?:^|/)CryRenderD3D1[12]\.dll$
CryEngine[] = (?:^|/)CryRenderVulkan\.dll$
Danmakufu = (?:^|/)th_dnh\.def$
Defold = (?:^|/)game\.dmanifest$
Diesel = ^dieselx\.cfg$
Flexi = (?:^|/)fx_core\.dll$
FNA = (?:^|/)fna\.dll$
Frostbite = (?:^|/)(?:Engine\.BuildInfo(?:_Win(?:64|32)_retail(?:_dll)?)?)\.dll$
GameGuru = ^files/gamecore/projectiletypes/.+\.dds$
GameMaker[] = (?:^|/)game\.(?:unx|ios)$
GameMaker[] = (?:^|/)libYoYoGamepad\.dylib$
GameMaker[] = (?:^|/)audiogroup1\.dat$
GameMaker[] = (?:^|/)Steamworks\.gm(?:k|l)\.dll$
GameMaker[] = (?:^|/)display_mouse_lock\.dll$
GameMaker[] = (?:^|/)rousrDissonance\.dll$
GameMaker[] = (?:^|/)CleanMem\.dll$
GameMaker[] = (?:^|/)window_set_cursor\.dll$
GameMaker[] = (?:^|/)joydll\.dll$
GameMaker[] = (?:^|/)gm7zip\.dll$
GameMaker[] = (?:^|/)GMXInput\.dll$
GameMaker[] = \.gm(?:spr|bck)$
Godot = (?:^|/)project\.godot$ ; Extra detections are in IsEngineGodot
GoldSource = ^hltv\.exe$
HaemimontSol = ^Local/English\.hpk$
HashLink = (?:^|/)libhl\.(?:dll|so)$
idTech2 = (?:^|/)gl(?:quake|hexen)(?:$|/)
idTech2_5 = (?:^|/)baseq2(?:$|/)
idTech4 = \.pk4$
idTech5 = \.streamed$
idTech6[] = \.mega2$
idTech6[] = \.texdb$
idTech7 = \.streamdb$
Kex = \.kpf$
KiriKiri = (?:^|/)data\.xp3$
Lime_OR_OpenFL = (?:^|/)lime(?:-legacy)?\.[hn]dll$
Love2D = (?:^|/)(?:lib)?love\.(?:dll|so|so\.0)$
Marmalade = (?:^|/)angle/lib(?:EGL|GLESv2)Marmalade\.dll
MonoGame = (?:^|/)monogame
NScripter[] = ^arc\.nsa$
NScripter[] = ^nscript\.dat$
OGRE = (?:^|/)OgreMain(?:_x64)?\.dll$
Phyre = \.phyre\.
Pico8 = (?:^|/)data\.pod$
PlayFirstPlayground = \.pfp$
Prism3D = (?:^|/)base\.scs$
RealVirtuality = \.bisign$
RenPy[] = (?:^|/)renpy(?:$|/)
RenPy[] = \.rpyb$
RPGMaker[] = (?:^|/)config\.rpgsave$
RPGMaker[] = (?:^|/)js/(?:rpg|rmmz)_core\.js$
RPGMaker[] = (?:^|/)rgss(?:104e|102j|102e|301|202e)\.dll$
RPGMaker[] = (?:^|/)rp[tg]_rt\.exe$
RPGMaker[] = (?:^|/)RPG_RT\.ini$
RPGMaker[] = \.(?:rgssad|rvproj2|rgss3a|rgss2a)$
Snowdrop = \.sdfdata$
Solar2D = (?:^|/)CoronaLabs\.Corona\.Native\.dll$
Source = (?:^|/)(?:vphysics|bsppack)\.(?:dylib|dll|so)$
Source2 = (?:^|/)gameinfo\.gi$
TelltaleTool = \.ttarch$
Torque = \.cs\.dso$
UbiArtFramework = pc(?:32)?\.ipk$
UbisoftAnvil = (?:^|/)(?:datapc(?:64|)|gamedatapc_00)\.forge$
Unigine = (?:^|/)(?:|lib)Unigine_x(?:86|64)\.(?:dylib|dll|so)$
Unity[] = (?:^|/)Assembly-CSharp\.dll$
Unity[] = (?:^|/)Unity(?:Engine|Player)\.(?:dylib|dll)$
Unity[] = (?:^|/)UnityEngine\..+$
Unreal[] = (?:^|/)Binaries/Win(?:32|64)/
Unreal[] = (?:^|/)Engine/Binaries/ThirdParty/
Unreal[] = (?:^|/)UnrealEd\.
Virtools = (?:^|/)CKDX[7-9]Rasterizer\.dll$
VisionaireStudio = (?:^|/)VisionaireConfigurationTool\.exe(?:$|/)
VisualNovelMaker = (?:^|/)data/summaries\.json\.js$
Wintermute = (?:^|/)(?:wme_steam\.dll|data\.dcp)$
WolfRPGEditor = data\.wolf$
XNA[] = (?:^|/)xnafx31_redist\.msi$
XNA[] = (?:^|/|\.)XNA(?:$|/|\.)

[Container]
Electron = (?:^|/)LICENSE\.electron\.txt$

[Emulator]
DOSBOX = (?:^|/)dosbox(?:$|/|\.exe$)
SCUMMVM = (?:^|/)scummvm\.exe$

[AntiCheat]
AntiCheatExpert[] = (?:^|/)AntiCheatExpert/
AntiCheatExpert[] = (?:^|/)AceAntibotClient/
BattlEye = (?:^|/)BEService(?:_x64)?\.exe$
BlackCipher = (?:^|/)BlackCipher/
EasyAntiCheat = (?:^|/)EasyAntiCheat/
EQU8 = (?:^|/)equ8_conf\.json$
nProtect_GameGuard = (?:^|/)gameguard\.des$
PunkBuster = (?:^|/)(?:PnkBstrA|pbsvc)\.exe$
XIGNCODE3 = \.xem$

[SDK]
Adobe_Flash[] = (?:^|/)Flash[ _]?Player(?:$|/|\.)
Adobe_Flash[] = (?:^|/)StandalonePlayerLocalizable\.strings(?:$|/)
AMD_FSR2 = (?:^|/)ffx_fsr2_api_x(?:64|86)\.dll$
AMD_GPU_Services = (?:^|/)amd_ags_x(?:64|86)\.dll$
Azure_Playfab_Party = (?:^|/)Party(?:Win|Win7|Win32|XboxLive|XboxLiveWin32)\.dll$
Bink_Video = (?:^|/)bink2?w(?:64|32)?\.dll$
CEF = (?:^|/)libcef\.(?:dll|so)$
CRIWARE = \.(?:cpk|sfd|usm|adx|acb|awb)$
cURL = curl(?:module|lib|d|-4|-ttv|-x64|64|_pluginw64_release|)\.(?:dll|exe|lib|so|so\.4|so\.4\.5\.0)$
Discord = (?:^|/)(?:lib)?discord(?:|-rpc|_game_sdk)\.(?:dll|dylib|so)$
EpicOnlineServices = (?:^|/)(?:lib)?eossdk
FMOD = (?:^|/)(?:lib)?fmod(?:l|ex|exl|studio|studiol|)(?:64)?\.(?:dylib|dll|so)$
Greenworks = (?:^|/)greenworks-(?:win|osx|linux)(?:32|64)?\.node$
Intel_OID = (?:^|/)OpenImageDenoise\.dll$
Intel_XeSS = (?:^|/)(?:ig|lib)xess\.dll$
iZotope = (?:^|/)iZotope\.dll$
JVM = (?:^|/)bin/java(?:\.exe|\.dll)?$
NodeJS = (?:^|/)node\.dll$
NVIDIA_Ansel = (?:^|/)AnselSDK(?:32|64)\.dll$
NVIDIA_APEX = (?:^|/)apex(?:framework|_framework|_loader|_release)
NVIDIA_DLSS = (?:^|/)nvngx_dlss\.dll$
NVIDIA_Nsight_Aftermath = (?:^|/)GFSDK_Aftermath_Lib(?:\.x86|\.x64)?\.dll$
NVIDIA_PhysX = (?:^|/)PhysX(?:_64|_32|3_x64|3_x86|Core|Loader)\.dll$
NWJS = (?:^|/)nw\.(?:dll|pak)$
OculusXRPlugin = (?:^|/)OVRPlugin\.dll$
Oodle = (?:^|/)oo2(?:core|net|ext)\_[3-9]\_win(?:32|64)\.dll$
OpenAL = (?:^|/)OpenAL(?:32|64)\.dll$
OpenVR = (?:^|/)(?:lib)?openvr_api\.(?:dll|so|bundle)$
OpenXR = (?:^|/)(?:lib)?openxr_loader\.(?:dll|so)$
Photon = (?:^|/)Photon(?:3Unity3D|3DotNet)\.dll$
Qt = (?:^|/)Qt(?:Core4|[0-9]Core)\.dll$
SDL = (?:^|/)sdl2?\.dll$
SteamworksNET = (?:^|/)(?:Steamworks\.NET\.dll|com\.rlabrecque\.steamworks\.net\.dll)$
Steam_Audio = (?:^|/)(?:lib)?(?:steamaudio|phonon)\.(?:dylib|dll|so)$
Steam_Networking = (?:^|/)(?:lib)?steamnetworkingsockets\.(?:dylib|dll|so)$
Tobii = (?:^|/)Tobii
UnityBurst = (?:^|/)lib_burst_generated\.(?:dll|so|bundle)$
UnityEntities[] = (?:^|/)Unity\.Entities\.dll$
UnityEntities[] = (?:^|/)StreamingAssets/SubScenes/
UnityHDRP = (?:^|/)Unity\.RenderPipelines\.HighDefinition\.(?:Config\.Runtime|Runtime)\.dll$
UnityHybridRenderer = (?:^|/)Unity\.Rendering\.Hybrid\.dll$
UnityURP = (?:^|/)Unity\.RenderPipelines\.Universal\.Runtime\.dll$
Vivox[] = (?:^|/)ortp\.dll$
Vivox[] = vivox
Vorbis = vorbis
Wwise = (?:^|/)AkSoundEngine(?:dll)?\.(?:bundle|dll)$
